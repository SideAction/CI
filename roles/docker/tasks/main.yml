---
- name: Get the docker gpg key
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  become: true

- name: Remove older docker packages
  apt: pkg={{item}} state=removed 
  become: true
  with_items:
    - docker
    - docker-engine
    - docker.io

- name: Install required packages for apt over https
  become: true
  apt: pkg={{item}} state=installed
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common

- name: Setup the repository for this arch
  become: true
  shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

- name: Update apt and install the docker package
  become: true
  apt: pkg={{item}} state=installed update_cache=true
  with_items:
    - docker-ce
    - docker-compose

- name: Setup the ubuntu user as able to run docker
  become: true
  user: 
    name: ubuntu
    comment: "Seriously docker, wtf"
    groups: docker
    append: yes

- name: Setup a set of exceptions for insecure docker hosts
  template: "src=daemon.json dest=/etc/docker/daemon.json mode=0644 group=root owner=root"
  become: true

- name: Reload the configuration
  become: true
  service:
    name: docker
    state: restarted

- name: Make it so the go user can actually run docker commands
  become: true
  user:
    name: go
    comment: "Go build system"
    groups: docker
    state: present
    append: yes

- name: In development add vagrant to the docker group
  become: true
  when: ENV == "development"
  user:
    name: vagrant
    comment: "Dev, add the vagrant user."
    groups: docker
    state: present
    
- name: Validate docker is up and running an that we can run docker commands
  shell: docker run hello-world
  become: true
  become_user: go

- name: Login to the nexus docker images proxy
  become: true
  become_user: go
  when: DO_DOCKER_LOGIN == "yes"
  shell: "docker login -u {{ NEXUS_LOGIN }} -p {{ NEXUS_PW }} {{ NEXUS_SERVER }}:{{ NEXUS_DOCKER_PORT }}"

- name: Login to the nexus docker registry as well
  become: true
  become_user: go
  when: DO_DOCKER_LOGIN == "yes"
  shell: "docker login -u {{ NEXUS_LOGIN }} -p {{ NEXUS_PW }} {{ NEXUS_SERVER }}:{{ NEXUS_DOCKER_REGISTRY_PORT }}"

- name: Pull an image onto the host so we are ready to run tests.
  when: DO_IMAGE_PULL == "yes"
  become: true
  become_user: go
  shell: "docker pull {{TS_CI_IMAGE}}"

- name: Build Docker image (likely done on nexus)
  import_tasks: build_ci_images.yml

  #when: DO_IMAGE_BUILD == "yes"
